//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Ajuna.Infrastructure.Storages;
using Ajuna.NetApi.Model.PalletConnectfour;
using Ajuna.NetApi.Model.PrimitiveTypes;
using Ajuna.NetApi.Model.SpCore;
using Ajuna.NetApi.Model.Types.Base;
using Ajuna.NetApi.Model.Types.Primitive;
using Microsoft.AspNetCore.Mvc;
using System;
using System.Collections.Generic;
using System.Threading.Tasks;


namespace Ajuna.Infrastructure.RestService.Controller
{
    
    
    /// <summary>
    /// ConnectFourController controller to access storages.
    /// </summary>
    [ApiController()]
    [Route("[controller]")]
    public sealed class ConnectFourController : ControllerBase
    {
        
        private IConnectFourStorage _connectFourStorage;
        
        /// <summary>
        /// ConnectFourController constructor.
        /// </summary>
        public ConnectFourController(IConnectFourStorage connectFourStorage)
        {
            _connectFourStorage = connectFourStorage;
        }
        
        /// <summary>
        /// >> Something
        /// </summary>
        [HttpGet("Something")]
        [ProducesResponseType(typeof(Ajuna.NetApi.Model.Types.Primitive.U32), 200)]
        public IActionResult GetSomething()
        {
            return this.Ok(_connectFourStorage.GetSomething());
        }
        
        /// <summary>
        /// >> FounderKey
        /// </summary>
        [HttpGet("FounderKey")]
        [ProducesResponseType(typeof(Ajuna.NetApi.Model.SpCore.AccountId32), 200)]
        public IActionResult GetFounderKey()
        {
            return this.Ok(_connectFourStorage.GetFounderKey());
        }
        
        /// <summary>
        /// >> Boards
        ///  Store all boards that are currently being played.
        /// </summary>
        [HttpGet("Boards")]
        [ProducesResponseType(typeof(Ajuna.NetApi.Model.PalletConnectfour.BoardStruct), 200)]
        public IActionResult GetBoards(string key)
        {
            return this.Ok(_connectFourStorage.GetBoards(key));
        }
        
        /// <summary>
        /// >> PlayerBoard
        ///  Store players active board, currently only one board per player allowed.
        /// </summary>
        [HttpGet("PlayerBoard")]
        [ProducesResponseType(typeof(Ajuna.NetApi.Model.PrimitiveTypes.H256), 200)]
        public IActionResult GetPlayerBoard(string key)
        {
            return this.Ok(_connectFourStorage.GetPlayerBoard(key));
        }
        
        /// <summary>
        /// >> BoardSchedules
        ///  Store boards open schedules.
        /// </summary>
        [HttpGet("BoardSchedules")]
        [ProducesResponseType(typeof(BaseOpt<BaseVec<Ajuna.NetApi.Model.Types.Primitive.U8>>), 200)]
        public IActionResult GetBoardSchedules(string key)
        {
            return this.Ok(_connectFourStorage.GetBoardSchedules(key));
        }
        
        /// <summary>
        /// >> Nonce
        /// </summary>
        [HttpGet("Nonce")]
        [ProducesResponseType(typeof(Ajuna.NetApi.Model.Types.Primitive.U64), 200)]
        public IActionResult GetNonce()
        {
            return this.Ok(_connectFourStorage.GetNonce());
        }
    }
}
