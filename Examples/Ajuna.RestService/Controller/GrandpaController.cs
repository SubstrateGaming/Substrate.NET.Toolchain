//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Ajuna.Infrastructure.Storages;
using Ajuna.NetApi.Model.PalletGrandpa;
using Ajuna.NetApi.Model.Types.Base;
using Ajuna.NetApi.Model.Types.Primitive;
using Microsoft.AspNetCore.Mvc;
using System;
using System.Collections.Generic;
using System.Threading.Tasks;


namespace Ajuna.Infrastructure.RestService.Controller
{
    
    
    /// <summary>
    /// GrandpaController controller to access storages.
    /// </summary>
    [ApiController()]
    [Route("[controller]")]
    public sealed class GrandpaController : ControllerBase
    {
        
        private IGrandpaStorage _grandpaStorage;
        
        /// <summary>
        /// GrandpaController constructor.
        /// </summary>
        public GrandpaController(IGrandpaStorage grandpaStorage)
        {
            _grandpaStorage = grandpaStorage;
        }
        
        /// <summary>
        /// >> State
        ///  State of the current authority set.
        /// </summary>
        [HttpGet("State")]
        [ProducesResponseType(typeof(Ajuna.NetApi.Model.PalletGrandpa.EnumStoredState), 200)]
        public IActionResult GetState()
        {
            return this.Ok(_grandpaStorage.GetState());
        }
        
        /// <summary>
        /// >> PendingChange
        ///  Pending change: (signaled at, scheduled change).
        /// </summary>
        [HttpGet("PendingChange")]
        [ProducesResponseType(typeof(Ajuna.NetApi.Model.PalletGrandpa.StoredPendingChange), 200)]
        public IActionResult GetPendingChange()
        {
            return this.Ok(_grandpaStorage.GetPendingChange());
        }
        
        /// <summary>
        /// >> NextForced
        ///  next block number where we can force a change.
        /// </summary>
        [HttpGet("NextForced")]
        [ProducesResponseType(typeof(Ajuna.NetApi.Model.Types.Primitive.U32), 200)]
        public IActionResult GetNextForced()
        {
            return this.Ok(_grandpaStorage.GetNextForced());
        }
        
        /// <summary>
        /// >> Stalled
        ///  `true` if we are currently stalled.
        /// </summary>
        [HttpGet("Stalled")]
        [ProducesResponseType(typeof(BaseTuple<Ajuna.NetApi.Model.Types.Primitive.U32,Ajuna.NetApi.Model.Types.Primitive.U32>), 200)]
        public IActionResult GetStalled()
        {
            return this.Ok(_grandpaStorage.GetStalled());
        }
        
        /// <summary>
        /// >> CurrentSetId
        ///  The number of changes (both in terms of keys and underlying economic responsibilities)
        ///  in the &quot;set&quot; of Grandpa validators from genesis.
        /// </summary>
        [HttpGet("CurrentSetId")]
        [ProducesResponseType(typeof(Ajuna.NetApi.Model.Types.Primitive.U64), 200)]
        public IActionResult GetCurrentSetId()
        {
            return this.Ok(_grandpaStorage.GetCurrentSetId());
        }
        
        /// <summary>
        /// >> SetIdSession
        ///  A mapping from grandpa set ID to the index of the *most recent* session for which its
        ///  members were responsible.
        /// 
        ///  TWOX-NOTE: `SetId` is not under user control.
        /// </summary>
        [HttpGet("SetIdSession")]
        [ProducesResponseType(typeof(Ajuna.NetApi.Model.Types.Primitive.U32), 200)]
        public IActionResult GetSetIdSession(string key)
        {
            return this.Ok(_grandpaStorage.GetSetIdSession(key));
        }
    }
}
