//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Ajuna.NetApi.Model.PalletTransactionStorage;
using Ajuna.NetApi.Model.Types.Base;
using Ajuna.NetApi.Model.Types.Primitive;
using Ajuna.RestService.Generated.Storage;
using Microsoft.AspNetCore.Mvc;
using System;
using System.Collections.Generic;
using System.Threading.Tasks;


namespace Ajuna.RestService.Generated.Controller
{
    
    
    /// <summary>
    /// TransactionStorageController controller to access storages.
    /// </summary>
    [ApiController()]
    [Route("[controller]")]
    public sealed class TransactionStorageController : ControllerBase
    {
        
        private ITransactionStorageStorage _transactionStorageStorage;
        
        /// <summary>
        /// TransactionStorageController constructor.
        /// </summary>
        public TransactionStorageController(ITransactionStorageStorage transactionStorageStorage)
        {
            _transactionStorageStorage = transactionStorageStorage;
        }
        
        /// <summary>
        /// >> Transactions
        ///  Collection of transaction metadata by block number.
        /// </summary>
        [HttpGet("Transactions")]
        [ProducesResponseType(typeof(BaseVec<Ajuna.NetApi.Model.PalletTransactionStorage.TransactionInfo>), 200)]
        public IActionResult GetTransactions(string key)
        {
            return this.Ok(_transactionStorageStorage.GetTransactions(key));
        }
        
        /// <summary>
        /// >> ChunkCount
        ///  Count indexed chunks for each block.
        /// </summary>
        [HttpGet("ChunkCount")]
        [ProducesResponseType(typeof(Ajuna.NetApi.Model.Types.Primitive.U32), 200)]
        public IActionResult GetChunkCount(string key)
        {
            return this.Ok(_transactionStorageStorage.GetChunkCount(key));
        }
        
        /// <summary>
        /// >> ByteFee
        ///  Storage fee per byte.
        /// </summary>
        [HttpGet("ByteFee")]
        [ProducesResponseType(typeof(Ajuna.NetApi.Model.Types.Primitive.U128), 200)]
        public IActionResult GetByteFee()
        {
            return this.Ok(_transactionStorageStorage.GetByteFee());
        }
        
        /// <summary>
        /// >> EntryFee
        ///  Storage fee per transaction.
        /// </summary>
        [HttpGet("EntryFee")]
        [ProducesResponseType(typeof(Ajuna.NetApi.Model.Types.Primitive.U128), 200)]
        public IActionResult GetEntryFee()
        {
            return this.Ok(_transactionStorageStorage.GetEntryFee());
        }
        
        /// <summary>
        /// >> MaxTransactionSize
        ///  Maximum data set in a single transaction in bytes.
        /// </summary>
        [HttpGet("MaxTransactionSize")]
        [ProducesResponseType(typeof(Ajuna.NetApi.Model.Types.Primitive.U32), 200)]
        public IActionResult GetMaxTransactionSize()
        {
            return this.Ok(_transactionStorageStorage.GetMaxTransactionSize());
        }
        
        /// <summary>
        /// >> MaxBlockTransactions
        ///  Maximum number of indexed transactions in the block.
        /// </summary>
        [HttpGet("MaxBlockTransactions")]
        [ProducesResponseType(typeof(Ajuna.NetApi.Model.Types.Primitive.U32), 200)]
        public IActionResult GetMaxBlockTransactions()
        {
            return this.Ok(_transactionStorageStorage.GetMaxBlockTransactions());
        }
        
        /// <summary>
        /// >> StoragePeriod
        ///  Storage period for data in blocks. Should match `sp_storage_proof::DEFAULT_STORAGE_PERIOD`
        ///  for block authoring.
        /// </summary>
        [HttpGet("StoragePeriod")]
        [ProducesResponseType(typeof(Ajuna.NetApi.Model.Types.Primitive.U32), 200)]
        public IActionResult GetStoragePeriod()
        {
            return this.Ok(_transactionStorageStorage.GetStoragePeriod());
        }
        
        /// <summary>
        /// >> BlockTransactions
        /// </summary>
        [HttpGet("BlockTransactions")]
        [ProducesResponseType(typeof(BaseVec<Ajuna.NetApi.Model.PalletTransactionStorage.TransactionInfo>), 200)]
        public IActionResult GetBlockTransactions()
        {
            return this.Ok(_transactionStorageStorage.GetBlockTransactions());
        }
        
        /// <summary>
        /// >> ProofChecked
        ///  Was the proof checked in this block?
        /// </summary>
        [HttpGet("ProofChecked")]
        [ProducesResponseType(typeof(Ajuna.NetApi.Model.Types.Primitive.Bool), 200)]
        public IActionResult GetProofChecked()
        {
            return this.Ok(_transactionStorageStorage.GetProofChecked());
        }
    }
}
