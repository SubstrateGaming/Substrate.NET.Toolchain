//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Ajuna.NetApi.Model.NodeRuntime;
using Ajuna.NetApi.Model.SpCore;
using Ajuna.NetApi.Model.Types.Base;
using Ajuna.NetApi.Model.Types.Primitive;
using Ajuna.RestService.Generated.Storage;
using Microsoft.AspNetCore.Mvc;
using System;
using System.Collections.Generic;
using System.Threading.Tasks;


namespace Ajuna.RestService.Generated.Controller
{
    
    
    /// <summary>
    /// SessionController controller to access storages.
    /// </summary>
    [ApiController()]
    [Route("[controller]")]
    public sealed class SessionController : ControllerBase
    {
        
        private ISessionStorage _sessionStorage;
        
        /// <summary>
        /// SessionController constructor.
        /// </summary>
        public SessionController(ISessionStorage sessionStorage)
        {
            _sessionStorage = sessionStorage;
        }
        
        /// <summary>
        /// >> Validators
        ///  The current set of validators.
        /// </summary>
        [HttpGet("Validators")]
        [ProducesResponseType(typeof(BaseVec<Ajuna.NetApi.Model.SpCore.AccountId32>), 200)]
        public IActionResult GetValidators()
        {
            return this.Ok(_sessionStorage.GetValidators());
        }
        
        /// <summary>
        /// >> CurrentIndex
        ///  Current index of the session.
        /// </summary>
        [HttpGet("CurrentIndex")]
        [ProducesResponseType(typeof(Ajuna.NetApi.Model.Types.Primitive.U32), 200)]
        public IActionResult GetCurrentIndex()
        {
            return this.Ok(_sessionStorage.GetCurrentIndex());
        }
        
        /// <summary>
        /// >> QueuedChanged
        ///  True if the underlying economic identities or weighting behind the validators
        ///  has changed in the queued validator set.
        /// </summary>
        [HttpGet("QueuedChanged")]
        [ProducesResponseType(typeof(Ajuna.NetApi.Model.Types.Primitive.Bool), 200)]
        public IActionResult GetQueuedChanged()
        {
            return this.Ok(_sessionStorage.GetQueuedChanged());
        }
        
        /// <summary>
        /// >> QueuedKeys
        ///  The queued keys for the next session. When the next session begins, these keys
        ///  will be used to determine the validator&#39;s session keys.
        /// </summary>
        [HttpGet("QueuedKeys")]
        [ProducesResponseType(typeof(BaseVec<BaseTuple<Ajuna.NetApi.Model.SpCore.AccountId32,Ajuna.NetApi.Model.NodeRuntime.SessionKeys>>), 200)]
        public IActionResult GetQueuedKeys()
        {
            return this.Ok(_sessionStorage.GetQueuedKeys());
        }
        
        /// <summary>
        /// >> DisabledValidators
        ///  Indices of disabled validators.
        /// 
        ///  The set is cleared when `on_session_ending` returns a new set of identities.
        /// </summary>
        [HttpGet("DisabledValidators")]
        [ProducesResponseType(typeof(BaseVec<Ajuna.NetApi.Model.Types.Primitive.U32>), 200)]
        public IActionResult GetDisabledValidators()
        {
            return this.Ok(_sessionStorage.GetDisabledValidators());
        }
        
        /// <summary>
        /// >> NextKeys
        ///  The next session keys for a validator.
        /// </summary>
        [HttpGet("NextKeys")]
        [ProducesResponseType(typeof(Ajuna.NetApi.Model.NodeRuntime.SessionKeys), 200)]
        public IActionResult GetNextKeys(string key)
        {
            return this.Ok(_sessionStorage.GetNextKeys(key));
        }
        
        /// <summary>
        /// >> KeyOwner
        ///  The owner of a key. The key is the `KeyTypeId` + the encoded key.
        /// </summary>
        [HttpGet("KeyOwner")]
        [ProducesResponseType(typeof(Ajuna.NetApi.Model.SpCore.AccountId32), 200)]
        public IActionResult GetKeyOwner(string key)
        {
            return this.Ok(_sessionStorage.GetKeyOwner(key));
        }
    }
}
