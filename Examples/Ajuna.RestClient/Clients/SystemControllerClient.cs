//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Ajuna.RestClient.Clients
{
   using System;
   using System.Threading.Tasks;
   using System.Net.Http;
   using Ajuna.NetApi.Model.FrameSystem;
   using Ajuna.NetApi.Model.Types.Primitive;
   using Ajuna.NetApi.Model.FrameSupport;
   using Ajuna.NetApi.Model.PrimitiveTypes;
   using Ajuna.NetApi.Model.Types.Base;
   using Ajuna.NetApi.Model.SpRuntime;
   using Ajuna.RestClient.Interfaces;
   
   public sealed class SystemControllerClient : BaseClient, ISystemControllerClient
   {
      private HttpClient _httpClient;
      public SystemControllerClient(HttpClient httpClient)
      {
         _httpClient = httpClient;
      }
      public async Task<AccountInfo> GetAccount(string key)
      {
         return await SendRequestAsync<AccountInfo>(_httpClient, "system/account", key);
      }
      public async Task<U32> GetExtrinsicCount()
      {
         return await SendRequestAsync<U32>(_httpClient, "system/extrinsiccount");
      }
      public async Task<PerDispatchClassT1> GetBlockWeight()
      {
         return await SendRequestAsync<PerDispatchClassT1>(_httpClient, "system/blockweight");
      }
      public async Task<U32> GetAllExtrinsicsLen()
      {
         return await SendRequestAsync<U32>(_httpClient, "system/allextrinsicslen");
      }
      public async Task<H256> GetBlockHash(string key)
      {
         return await SendRequestAsync<H256>(_httpClient, "system/blockhash", key);
      }
      public async Task<BaseVec<U8>> GetExtrinsicData(string key)
      {
         return await SendRequestAsync<BaseVec<U8>>(_httpClient, "system/extrinsicdata", key);
      }
      public async Task<U32> GetNumber()
      {
         return await SendRequestAsync<U32>(_httpClient, "system/number");
      }
      public async Task<H256> GetParentHash()
      {
         return await SendRequestAsync<H256>(_httpClient, "system/parenthash");
      }
      public async Task<Digest> GetDigest()
      {
         return await SendRequestAsync<Digest>(_httpClient, "system/digest");
      }
      public async Task<BaseVec<EventRecord>> GetEvents()
      {
         return await SendRequestAsync<BaseVec<EventRecord>>(_httpClient, "system/events");
      }
      public async Task<U32> GetEventCount()
      {
         return await SendRequestAsync<U32>(_httpClient, "system/eventcount");
      }
      public async Task<BaseVec<BaseTuple<U32, U32>>> GetEventTopics(string key)
      {
         return await SendRequestAsync<BaseVec<BaseTuple<U32, U32>>>(_httpClient, "system/eventtopics", key);
      }
      public async Task<LastRuntimeUpgradeInfo> GetLastRuntimeUpgrade()
      {
         return await SendRequestAsync<LastRuntimeUpgradeInfo>(_httpClient, "system/lastruntimeupgrade");
      }
      public async Task<Bool> GetUpgradedToU32RefCount()
      {
         return await SendRequestAsync<Bool>(_httpClient, "system/upgradedtou32refcount");
      }
      public async Task<Bool> GetUpgradedToTripleRefCount()
      {
         return await SendRequestAsync<Bool>(_httpClient, "system/upgradedtotriplerefcount");
      }
      public async Task<EnumPhase> GetExecutionPhase()
      {
         return await SendRequestAsync<EnumPhase>(_httpClient, "system/executionphase");
      }
   }
}
