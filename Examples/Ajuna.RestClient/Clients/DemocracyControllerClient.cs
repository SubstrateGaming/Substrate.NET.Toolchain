//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Ajuna.RestClient.Clients
{
   using System;
   using System.Threading.Tasks;
   using System.Net.Http;
   using Ajuna.NetApi.Model.Types.Primitive;
   using Ajuna.NetApi.Model.Types.Base;
   using Ajuna.NetApi.Model.PalletDemocracy;
   using Ajuna.RestClient.Interfaces;
   
   public sealed class DemocracyControllerClient : BaseClient, IDemocracyControllerClient
   {
      private HttpClient _httpClient;
      public DemocracyControllerClient(HttpClient httpClient)
      {
         _httpClient = httpClient;
      }
      public async Task<U32> GetPublicPropCount()
      {
         return await SendRequestAsync<U32>(_httpClient, "democracy/publicpropcount");
      }
      public async Task<BaseVec<BaseTuple<U32, Ajuna.NetApi.Model.PrimitiveTypes.H256, Ajuna.NetApi.Model.SpCore.AccountId32>>> GetPublicProps()
      {
         return await SendRequestAsync<BaseVec<BaseTuple<U32, Ajuna.NetApi.Model.PrimitiveTypes.H256, Ajuna.NetApi.Model.SpCore.AccountId32>>>(_httpClient, "democracy/publicprops");
      }
      public async Task<BaseTuple<BaseVec<Ajuna.NetApi.Model.SpCore.AccountId32>, U128>> GetDepositOf(string key)
      {
         return await SendRequestAsync<BaseTuple<BaseVec<Ajuna.NetApi.Model.SpCore.AccountId32>, U128>>(_httpClient, "democracy/depositof", key);
      }
      public async Task<EnumPreimageStatus> GetPreimages(string key)
      {
         return await SendRequestAsync<EnumPreimageStatus>(_httpClient, "democracy/preimages", key);
      }
      public async Task<U32> GetReferendumCount()
      {
         return await SendRequestAsync<U32>(_httpClient, "democracy/referendumcount");
      }
      public async Task<U32> GetLowestUnbaked()
      {
         return await SendRequestAsync<U32>(_httpClient, "democracy/lowestunbaked");
      }
      public async Task<EnumReferendumInfo> GetReferendumInfoOf(string key)
      {
         return await SendRequestAsync<EnumReferendumInfo>(_httpClient, "democracy/referenduminfoof", key);
      }
      public async Task<EnumVoting> GetVotingOf(string key)
      {
         return await SendRequestAsync<EnumVoting>(_httpClient, "democracy/votingof", key);
      }
      public async Task<U32> GetLocks(string key)
      {
         return await SendRequestAsync<U32>(_httpClient, "democracy/locks", key);
      }
      public async Task<Bool> GetLastTabledWasExternal()
      {
         return await SendRequestAsync<Bool>(_httpClient, "democracy/lasttabledwasexternal");
      }
      public async Task<BaseTuple<Ajuna.NetApi.Model.PrimitiveTypes.H256, EnumVoteThreshold>> GetNextExternal()
      {
         return await SendRequestAsync<BaseTuple<Ajuna.NetApi.Model.PrimitiveTypes.H256, EnumVoteThreshold>>(_httpClient, "democracy/nextexternal");
      }
      public async Task<BaseTuple<U32, BaseVec<Ajuna.NetApi.Model.SpCore.AccountId32>>> GetBlacklist(string key)
      {
         return await SendRequestAsync<BaseTuple<U32, BaseVec<Ajuna.NetApi.Model.SpCore.AccountId32>>>(_httpClient, "democracy/blacklist", key);
      }
      public async Task<Bool> GetCancellations(string key)
      {
         return await SendRequestAsync<Bool>(_httpClient, "democracy/cancellations", key);
      }
      public async Task<EnumReleases> GetStorageVersion()
      {
         return await SendRequestAsync<EnumReleases>(_httpClient, "democracy/storageversion");
      }
   }
}
