//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Ajuna.RestClient.Clients
{
    using System;
    using System.Threading.Tasks;
    using System.Net.Http;
    using Ajuna.NetApi.Model.Types.Primitive;
    using Ajuna.NetApi.Model.PalletLottery;
    using Ajuna.NetApi.Model.Types.Base;
    using Ajuna.NetApi.Model.SpCore;
    using Ajuna.RestClient.Interfaces;
    using System.Net.WebSockets;

    public sealed class LotteryControllerClient : BaseClient, ILotteryControllerClient
    {
        private HttpClient _httpClient;
        public LotteryControllerClient(HttpClient httpClient)
        {
            _httpClient = httpClient;
        }
        public async Task<U32> GetLotteryIndex()
        {
            return await SendRequestAsync<U32>(_httpClient, "lottery/lotteryindex");
        }
        public async Task<LotteryConfig> GetLottery()
        {
            return await SendRequestAsync<LotteryConfig>(_httpClient, "lottery/lottery");
        }
        public async Task<BaseTuple<U32, BaseVec<BaseTuple<U8, U8>>>> GetParticipants(string key)
        {
            return await SendRequestAsync<BaseTuple<U32, BaseVec<BaseTuple<U8, U8>>>>(_httpClient, "lottery/participants", key);
        }
        public async Task<U32> GetTicketsCount()
        {
            return await SendRequestAsync<U32>(_httpClient, "lottery/ticketscount");
        }
        public async Task<AccountId32> GetTickets(string key)
        {
            return await SendRequestAsync<AccountId32>(_httpClient, "lottery/tickets", key);
        }
        public async Task<BaseVec<BaseTuple<U8, U8>>> GetCallIndices()
        {
            return await SendRequestAsync<BaseVec<BaseTuple<U8, U8>>>(_httpClient, "lottery/callindices");
        }
    }
}
