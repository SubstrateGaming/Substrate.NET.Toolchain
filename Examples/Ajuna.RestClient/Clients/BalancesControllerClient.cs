//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Ajuna.RestClient.Clients
{
   using System;
   using System.Threading.Tasks;
   using System.Net.Http;
   using Ajuna.NetApi.Model.Types.Primitive;
   using Ajuna.NetApi.Model.PalletBalances;
   using Ajuna.NetApi.Model.FrameSupport;
   using Ajuna.RestClient.Interfaces;
   
   public sealed class BalancesControllerClient : BaseClient, IBalancesControllerClient
   {
      private HttpClient _httpClient;
      public BalancesControllerClient(HttpClient httpClient)
      {
         _httpClient = httpClient;
      }
      public async Task<U128> GetTotalIssuance()
      {
         return await SendRequestAsync<U128>(_httpClient, "balances/totalissuance");
      }
      public async Task<AccountData> GetAccount(string key)
      {
         return await SendRequestAsync<AccountData>(_httpClient, "balances/account", key);
      }
      public async Task<WeakBoundedVecT2> GetLocks(string key)
      {
         return await SendRequestAsync<WeakBoundedVecT2>(_httpClient, "balances/locks", key);
      }
      public async Task<BoundedVecT6> GetReserves(string key)
      {
         return await SendRequestAsync<BoundedVecT6>(_httpClient, "balances/reserves", key);
      }
      public async Task<EnumReleases> GetStorageVersion()
      {
         return await SendRequestAsync<EnumReleases>(_httpClient, "balances/storageversion");
      }
   }
}
