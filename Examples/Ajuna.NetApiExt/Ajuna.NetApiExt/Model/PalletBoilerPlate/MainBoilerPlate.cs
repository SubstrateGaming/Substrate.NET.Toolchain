//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Ajuna.NetApi.Model.Extrinsics;
using Ajuna.NetApi.Model.Meta;
using Ajuna.NetApi.Model.SpCore;
using Ajuna.NetApi.Model.Types;
using Ajuna.NetApi.Model.Types.Base;
using Ajuna.NetApi.Model.Types.Primitive;
using System;
using System.Collections.Generic;
using System.Threading;
using System.Threading.Tasks;


namespace Ajuna.NetApi.Model.PalletBoilerPlate
{
    
    
    public sealed class BoilerPlateStorage
    {
        
        // Substrate client for the storage calls.
        private SubstrateClientExt _client;
        
        public BoilerPlateStorage(SubstrateClientExt client)
        {
            this._client = client;
            _client.StorageKeyDict.Add(new System.Tuple<string, string>("BoilerPlate", "Something"), new System.Tuple<Ajuna.NetApi.Model.Meta.Storage.Hasher[], System.Type, System.Type>(null, null, typeof(Ajuna.NetApi.Model.Types.Primitive.U32)));
        }
        
        /// <summary>
        /// >> SomethingParams
        /// </summary>
        public static string SomethingParams()
        {
            return RequestGenerator.GetStorage("BoilerPlate", "Something", Ajuna.NetApi.Model.Meta.Storage.Type.Plain);
        }
        
        /// <summary>
        /// >> Something
        /// </summary>
        public async Task<Ajuna.NetApi.Model.Types.Primitive.U32> Something(CancellationToken token)
        {
            string parameters = BoilerPlateStorage.SomethingParams();
            return await _client.GetStorageAsync<Ajuna.NetApi.Model.Types.Primitive.U32>(parameters, token);
        }
    }
    
    public sealed class BoilerPlateCalls
    {
        
        /// <summary>
        /// >> do_something
        /// Contains one variant per dispatchable that can be called by an extrinsic.
        /// </summary>
        public static Method DoSomething(Ajuna.NetApi.Model.Types.Primitive.U32 something)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(something.Encode());
            return new Method(41, "BoilerPlate", 0, "do_something", byteArray.ToArray());
        }
        
        /// <summary>
        /// >> cause_error
        /// Contains one variant per dispatchable that can be called by an extrinsic.
        /// </summary>
        public static Method CauseError()
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            return new Method(41, "BoilerPlate", 1, "cause_error", byteArray.ToArray());
        }
    }
    
    /// <summary>
    /// >> SomethingStored
    /// Event documentation should end with an array that provides descriptive names for event
    /// parameters. [something, who]
    /// </summary>
    public sealed class EventSomethingStored : BaseTuple<Ajuna.NetApi.Model.Types.Primitive.U32, Ajuna.NetApi.Model.SpCore.AccountId32>
    {
    }
    
    public enum BoilerPlateErrors
    {
        
        /// <summary>
        /// >> NoneValue
        /// Error names should be descriptive.
        /// </summary>
        NoneValue,
        
        /// <summary>
        /// >> StorageOverflow
        /// Errors should have helpful documentation associated with them.
        /// </summary>
        StorageOverflow,
    }
}
