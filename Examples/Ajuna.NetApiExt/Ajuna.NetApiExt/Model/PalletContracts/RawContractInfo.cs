//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Ajuna.NetApi.Model.PrimitiveTypes;
using Ajuna.NetApi.Model.Types.Base;
using Ajuna.NetApi.Model.Types.Primitive;
using System;
using System.Collections.Generic;


namespace Ajuna.NetApi.Model.PalletContracts
{
    
    
    /// <summary>
    /// >> 414 - Composite[pallet_contracts.storage.RawContractInfo]
    /// </summary>
    public sealed class RawContractInfo : BaseType
    {
        
        /// <summary>
        /// >> trie_id
        /// </summary>
        private BaseVec<Ajuna.NetApi.Model.Types.Primitive.U8> _trieId;
        
        /// <summary>
        /// >> code_hash
        /// </summary>
        private Ajuna.NetApi.Model.PrimitiveTypes.H256 _codeHash;
        
        /// <summary>
        /// >> _reserved
        /// </summary>
        private BaseOpt<BaseTuple> _reserved;
        
        public BaseVec<Ajuna.NetApi.Model.Types.Primitive.U8> TrieId
        {
            get
            {
                return this._trieId;
            }
            set
            {
                this._trieId = value;
            }
        }
        
        public Ajuna.NetApi.Model.PrimitiveTypes.H256 CodeHash
        {
            get
            {
                return this._codeHash;
            }
            set
            {
                this._codeHash = value;
            }
        }
        
        public BaseOpt<BaseTuple> Reserved
        {
            get
            {
                return this._reserved;
            }
            set
            {
                this._reserved = value;
            }
        }
        
        public override string TypeName()
        {
            return "RawContractInfo";
        }
        
        public override byte[] Encode()
        {
            var result = new List<byte>();
            result.AddRange(TrieId.Encode());
            result.AddRange(CodeHash.Encode());
            result.AddRange(Reserved.Encode());
            return result.ToArray();
        }
        
        public override void Decode(byte[] byteArray, ref int p)
        {
            var start = p;
            TrieId = new BaseVec<Ajuna.NetApi.Model.Types.Primitive.U8>();
            TrieId.Decode(byteArray, ref p);
            CodeHash = new Ajuna.NetApi.Model.PrimitiveTypes.H256();
            CodeHash.Decode(byteArray, ref p);
            Reserved = new BaseOpt<BaseTuple>();
            Reserved.Decode(byteArray, ref p);
            TypeSize = p - start;
        }
    }
}
