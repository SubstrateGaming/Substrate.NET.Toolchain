//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Ajuna.NetApi.Model.SpCore;
using Ajuna.NetApi.Model.Types.Base;
using Ajuna.NetApi.Model.Types.Primitive;
using Ajuna.ServiceLayer.Attributes;
using Ajuna.ServiceLayer.Storage;
using System;
using System.Collections.Generic;
using System.Threading.Tasks;


namespace Ajuna.Infrastructure.Storages
{
    
    
    public interface IIndicesStorage : IStorage
    {
        
        /// <summary>
        /// >> Accounts
        ///  The lookup from index to account.
        /// </summary>
        BaseTuple<Ajuna.NetApi.Model.SpCore.AccountId32,Ajuna.NetApi.Model.Types.Primitive.U128,Ajuna.NetApi.Model.Types.Primitive.Bool> GetAccounts(string key);
    }
    
    public sealed class IndicesStorage : IIndicesStorage
    {
        
        private TypedMapStorage<BaseTuple<Ajuna.NetApi.Model.SpCore.AccountId32,Ajuna.NetApi.Model.Types.Primitive.U128,Ajuna.NetApi.Model.Types.Primitive.Bool>> _accountsTypedStorage;
        
        public IndicesStorage(IStorageChangeDelegate storageChangeDelegate)
        {
            this.AccountsTypedStorage = new TypedMapStorage<BaseTuple<Ajuna.NetApi.Model.SpCore.AccountId32,Ajuna.NetApi.Model.Types.Primitive.U128,Ajuna.NetApi.Model.Types.Primitive.Bool>>("Indices.Accounts", storageChangeDelegate);
        }
        
        public TypedMapStorage<BaseTuple<Ajuna.NetApi.Model.SpCore.AccountId32,Ajuna.NetApi.Model.Types.Primitive.U128,Ajuna.NetApi.Model.Types.Primitive.Bool>> AccountsTypedStorage
        {
            get
            {
                return _accountsTypedStorage;
            }
            set
            {
                _accountsTypedStorage = value;
            }
        }
        
        public async Task InitializeAsync(Ajuna.NetApi.SubstrateClient client)
        {
            await AccountsTypedStorage.InitializeAsync(client, "Indices", "Accounts");
        }
        
        [StorageChange("Indices", "Accounts")]
        public void OnUpdateAccounts(string key, string data)
        {
            AccountsTypedStorage.Update(key, data);
        }
        
        /// <summary>
        /// >> Accounts
        ///  The lookup from index to account.
        /// </summary>
        public BaseTuple<Ajuna.NetApi.Model.SpCore.AccountId32,Ajuna.NetApi.Model.Types.Primitive.U128,Ajuna.NetApi.Model.Types.Primitive.Bool> GetAccounts(string key)
        {
            if ((key == null))
            {
                return null;
            }
            if (AccountsTypedStorage.Dictionary.TryGetValue(key, out BaseTuple<Ajuna.NetApi.Model.SpCore.AccountId32,Ajuna.NetApi.Model.Types.Primitive.U128,Ajuna.NetApi.Model.Types.Primitive.Bool> result))
            {
                return result;
            }
            else
            {
                return null;
            }
        }
    }
}
