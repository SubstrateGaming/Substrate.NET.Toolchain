//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Ajuna.NetApi.Model.Base;
using Ajuna.NetApi.Model.PalletMultisig;
using Ajuna.NetApi.Model.SpCore;
using Ajuna.NetApi.Model.Types.Base;
using Ajuna.NetApi.Model.Types.Primitive;
using Ajuna.ServiceLayer.Attributes;
using Ajuna.ServiceLayer.Storage;
using System;
using System.Collections.Generic;
using System.Threading.Tasks;


namespace Ajuna.Infrastructure.Storages
{
    
    
    public interface IMultisigStorage : IStorage
    {
        
        /// <summary>
        /// >> Multisigs
        ///  The set of open multisig operations.
        /// </summary>
        Ajuna.NetApi.Model.PalletMultisig.Multisig GetMultisigs(string key);
        
        /// <summary>
        /// >> Calls
        /// </summary>
        BaseTuple<BaseVec<Ajuna.NetApi.Model.Types.Primitive.U8>,Ajuna.NetApi.Model.SpCore.AccountId32,Ajuna.NetApi.Model.Types.Primitive.U128> GetCalls(string key);
    }
    
    public sealed class MultisigStorage : IMultisigStorage
    {
        
        private TypedMapStorage<Ajuna.NetApi.Model.PalletMultisig.Multisig> _multisigsTypedStorage;
        
        private TypedMapStorage<BaseTuple<BaseVec<Ajuna.NetApi.Model.Types.Primitive.U8>,Ajuna.NetApi.Model.SpCore.AccountId32,Ajuna.NetApi.Model.Types.Primitive.U128>> _callsTypedStorage;
        
        public MultisigStorage(IStorageChangeDelegate storageChangeDelegate)
        {
            this.MultisigsTypedStorage = new TypedMapStorage<Ajuna.NetApi.Model.PalletMultisig.Multisig>("Multisig.Multisigs", storageChangeDelegate);
            this.CallsTypedStorage = new TypedMapStorage<BaseTuple<BaseVec<Ajuna.NetApi.Model.Types.Primitive.U8>,Ajuna.NetApi.Model.SpCore.AccountId32,Ajuna.NetApi.Model.Types.Primitive.U128>>("Multisig.Calls", storageChangeDelegate);
        }
        
        public TypedMapStorage<Ajuna.NetApi.Model.PalletMultisig.Multisig> MultisigsTypedStorage
        {
            get
            {
                return _multisigsTypedStorage;
            }
            set
            {
                _multisigsTypedStorage = value;
            }
        }
        
        public TypedMapStorage<BaseTuple<BaseVec<Ajuna.NetApi.Model.Types.Primitive.U8>,Ajuna.NetApi.Model.SpCore.AccountId32,Ajuna.NetApi.Model.Types.Primitive.U128>> CallsTypedStorage
        {
            get
            {
                return _callsTypedStorage;
            }
            set
            {
                _callsTypedStorage = value;
            }
        }
        
        public async Task InitializeAsync(Ajuna.NetApi.SubstrateClient client)
        {
            await MultisigsTypedStorage.InitializeAsync(client, "Multisig", "Multisigs");
            await CallsTypedStorage.InitializeAsync(client, "Multisig", "Calls");
        }
        
        [StorageChange("Multisig", "Multisigs")]
        public void OnUpdateMultisigs(string key, string data)
        {
            MultisigsTypedStorage.Update(key, data);
        }
        
        /// <summary>
        /// >> Multisigs
        ///  The set of open multisig operations.
        /// </summary>
        public Ajuna.NetApi.Model.PalletMultisig.Multisig GetMultisigs(string key)
        {
            if ((key == null))
            {
                return null;
            }
            if (MultisigsTypedStorage.Dictionary.TryGetValue(key, out Ajuna.NetApi.Model.PalletMultisig.Multisig result))
            {
                return result;
            }
            else
            {
                return null;
            }
        }
        
        [StorageChange("Multisig", "Calls")]
        public void OnUpdateCalls(string key, string data)
        {
            CallsTypedStorage.Update(key, data);
        }
        
        /// <summary>
        /// >> Calls
        /// </summary>
        public BaseTuple<BaseVec<Ajuna.NetApi.Model.Types.Primitive.U8>,Ajuna.NetApi.Model.SpCore.AccountId32,Ajuna.NetApi.Model.Types.Primitive.U128> GetCalls(string key)
        {
            if ((key == null))
            {
                return null;
            }
            if (CallsTypedStorage.Dictionary.TryGetValue(key, out BaseTuple<BaseVec<Ajuna.NetApi.Model.Types.Primitive.U8>,Ajuna.NetApi.Model.SpCore.AccountId32,Ajuna.NetApi.Model.Types.Primitive.U128> result))
            {
                return result;
            }
            else
            {
                return null;
            }
        }
    }
}
